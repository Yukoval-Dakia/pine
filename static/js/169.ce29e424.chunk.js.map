{"version":3,"file":"static/js/169.ce29e424.chunk.js","mappings":"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","sources":["components/ScientistCard.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { Scientist } from '../types/scientist';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport { getTranslation } from '../translations';\n\n// 卡片容器样式\nconst CardContainer = styled.div<{ $isVisible: boolean; $bgColor: string }>`\n  background-color: ${props => props.$bgColor};\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);\n  width: 80%;\n  max-width: 500px;\n  position: relative;\n  z-index: 1002;\n  opacity: ${props => props.$isVisible ? 1 : 0};\n  transform: ${props => props.$isVisible ? 'scale(1)' : 'scale(0.9)'};\n  transition: opacity 0.3s ease, transform 0.3s ease;\n`;\n\nconst fadeIn = keyframes`\n  0% { opacity: 0; }\n  100% { opacity: 1; }\n`;\n\n// 科学家照片\nconst ScientistImage = styled.div<{ $image: string }>`\n  width: 100%;\n  height: 350px;\n  background-image: url(${props => props.$image});\n  background-size: cover;\n  background-position: center;\n  margin: 0;\n  position: relative;\n  animation: ${fadeIn} 0.5s ease-in-out;\n`;\n\n// 卡片内容\nconst CardContent = styled.div<{ $bgColor: string }>`\n  padding: 20px;\n  background-color: ${props => props.$bgColor};\n`;\n\n// 姓名标题\nconst Name = styled.h2<{ $textColor: string }>`\n  margin: 0;\n  color: ${props => props.$textColor};\n  font-size: 38px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  width: 100%;\n  text-align: center;\n  \n  &:after {\n    content: '';\n    position: absolute;\n    bottom: -5px;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 120px;\n    height: 3px;\n    background-color: ${props => props.$textColor};\n  }\n`;\n\n// 学科标签 - 修改为不遮挡图片\nconst Subject = styled.div<{ $textColor: string; $bgColor: string }>`\n  background-color: ${props => props.$bgColor};\n  color: ${props => props.$textColor};\n  padding: 10px 25px;\n  border-radius: 20px;\n  display: block;\n  margin: 0 auto;\n  font-size: 24px;\n  font-weight: bold;\n  text-align: center;\n  width: fit-content;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n`;\n\n// 科目容器\nconst SubjectContainer = styled.div<{ $bgColor: string }>`\n  padding: 20px 0 10px 0;\n  background-color: ${props => props.$bgColor};\n  width: 100%;\n`;\n\n// 占位符加载动画\nconst ShimmerAnimation = keyframes`\n  0% {\n    background-position: -468px 0;\n  }\n  100% {\n    background-position: 468px 0;\n  }\n`;\n\nconst ImagePlaceholder = styled.div`\n  width: 100%;\n  height: 350px;\n  background: linear-gradient(to right, #f6f7f8 8%, #edeef1 18%, #f6f7f8 33%);\n  background-size: 800px 104px;\n  animation: ${ShimmerAnimation} 1.5s infinite linear forwards;\n`;\n\n// 更鲜艳的背景颜色数组\nconst backgroundColors = [\n  '#4A90E2', // 亮蓝\n  '#50E3C2', // 青绿\n  '#F5A623', // 橙黄\n  '#D0021B', // 红色\n  '#9013FE', // 紫色\n  '#417505', // 绿色\n  '#8B572A', // 棕色\n  '#000000', // 黑色\n];\n\n// 获取颜色的反色函数\nconst getInverseColor = (hexColor: string): string => {\n  // 移除#前缀\n  const hex = hexColor.replace('#', '');\n  \n  // 将颜色转换为RGB\n  const r = parseInt(hex.substr(0, 2), 16);\n  const g = parseInt(hex.substr(2, 2), 16);\n  const b = parseInt(hex.substr(4, 2), 16);\n  \n  // 计算反色\n  const inverseR = 255 - r;\n  const inverseG = 255 - g;\n  const inverseB = 255 - b;\n  \n  // 转回十六进制格式\n  return `#${inverseR.toString(16).padStart(2, '0')}${inverseG.toString(16).padStart(2, '0')}${inverseB.toString(16).padStart(2, '0')}`;\n};\n\n// 科学家卡片组件\ninterface ScientistCardProps {\n  scientist: Scientist;\n  isVisible: boolean;\n  preloaded?: boolean;\n}\n\nconst ScientistCard: React.FC<ScientistCardProps> = ({ scientist, isVisible, preloaded = false }) => {\n  const { language } = useLanguage();\n  const t = getTranslation(language);\n  const [isImageLoaded, setIsImageLoaded] = useState(preloaded);\n  const [imageSrc, setImageSrc] = useState(scientist.image || '');\n  \n  // 为依赖数组提取唯一标识符\n  const scientistIdentifier = scientist._id || scientist.name;\n  \n  // 生成背景颜色和文字颜色\n  const { bgColor, textColor } = useMemo(() => {\n    // 使用科学家标识符的字符串生成一个数字哈希\n    let hash = 0;\n    for (let i = 0; i < scientistIdentifier.length; i++) {\n      hash = scientistIdentifier.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    // 使用哈希值确定背景颜色的索引\n    const index = Math.abs(hash % backgroundColors.length);\n    const bgColor = backgroundColors[index];\n    // 生成文字颜色（背景的反色）\n    const textColor = getInverseColor(bgColor);\n    \n    return { bgColor, textColor };\n  }, [scientistIdentifier]);\n  \n  // 检查图片是否加载成功\n  useEffect(() => {\n    if (!scientist.image || preloaded) {\n      setIsImageLoaded(true);\n      return;\n    }\n    \n    const img = new Image();\n    img.onload = () => {\n      setIsImageLoaded(true);\n    };\n    img.onerror = () => {\n      // 当主图片加载失败时，尝试使用备用图片\n      console.log('使用备用图片:', scientist.fallbackImage);\n      setImageSrc(scientist.fallbackImage || '');\n      \n      // 检查备用图片是否能加载\n      const fallbackImg = new Image();\n      fallbackImg.onload = () => {\n        setIsImageLoaded(true);\n      };\n      fallbackImg.onerror = () => {\n        // 即使备用图片失败也设置为已加载，显示空图片区域总比无限加载好\n        setIsImageLoaded(true);\n      };\n      fallbackImg.src = scientist.fallbackImage || '';\n    };\n    img.src = scientist.image;\n  }, [scientist.image, scientist.fallbackImage, preloaded]);\n\n  return (\n    <CardContainer $isVisible={isVisible} $bgColor={bgColor}>\n      <SubjectContainer $bgColor={bgColor}>\n        <Subject $textColor={textColor} $bgColor={`${bgColor}DD`}>\n          {t.scientist.subjectPrefix} {scientist.subject || '未知学科'}\n        </Subject>\n      </SubjectContainer>\n      {isImageLoaded ? (\n        <ScientistImage $image={imageSrc} />\n      ) : (\n        <ImagePlaceholder />\n      )}\n      <CardContent $bgColor={bgColor}>\n        <Name $textColor={textColor}>\n          {scientist.name}\n        </Name>\n      </CardContent>\n    </CardContainer>\n  );\n};\n\nexport default ScientistCard;"],"names":["CardContainer","styled","div","props","$bgColor","$isVisible","fadeIn","keyframes","ScientistImage","$image","CardContent","Name","h2","$textColor","Subject","SubjectContainer","ShimmerAnimation","ImagePlaceholder","backgroundColors","_ref","scientist","isVisible","preloaded","language","useLanguage","t","getTranslation","isImageLoaded","setIsImageLoaded","useState","imageSrc","setImageSrc","image","scientistIdentifier","_id","name","bgColor","textColor","useMemo","hash","i","length","charCodeAt","index","Math","abs","hexColor","hex","replace","r","parseInt","substr","inverseG","inverseB","toString","padStart","getInverseColor","useEffect","img","Image","onload","onerror","console","log","fallbackImage","fallbackImg","src","_jsxs","children","_jsx","subjectPrefix","subject"],"sourceRoot":""}