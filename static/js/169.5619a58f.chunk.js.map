{"version":3,"file":"static/js/169.5619a58f.chunk.js","mappings":"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","sources":["components/ScientistCard.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { Scientist } from '../types/scientist';\nimport { SmartText } from '../components/SmartText';\n\n// 彩虹动画效果\nconst rainbowBorder = keyframes`\n  0% { border-color: #ff0000; }\n  14% { border-color: #ff7f00; }\n  28% { border-color: #ffff00; }\n  42% { border-color: #00ff00; }\n  57% { border-color: #0000ff; }\n  71% { border-color: #4b0082; }\n  85% { border-color: #9400d3; }\n  100% { border-color: #ff0000; }\n`;\n\n// 卡片容器样式\nconst CardContainer = styled.div<{ $isVisible: boolean; $bgColor: string }>`\n  background-color: ${props => props.$bgColor};\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);\n  width: 80%;\n  max-width: 500px;\n  position: relative;\n  z-index: 1002;\n  opacity: ${props => props.$isVisible ? 1 : 0};\n  transform: ${props => props.$isVisible ? 'scale(1)' : 'scale(0.9)'};\n  transition: opacity 0.3s ease, transform 0.3s ease;\n  border: 6px solid #ff0000;\n  animation: ${rainbowBorder} 5s linear infinite;\n`;\n\nconst fadeIn = keyframes`\n  0% { opacity: 0; }\n  100% { opacity: 1; }\n`;\n\n// 科学家照片\nconst ScientistImage = styled.div<{ $image: string }>`\n  width: 100%;\n  height: 350px;\n  background-image: url(${props => props.$image});\n  background-size: cover;\n  background-position: center;\n  margin: 0;\n  position: relative;\n  animation: ${fadeIn} 0.5s ease-in-out;\n`;\n\n// 卡片内容\nconst CardContent = styled.div<{ $bgColor: string }>`\n  padding: 10px 20px;\n  background-color: ${props => props.$bgColor};\n`;\n\n// 姓名标题 - 加大字号\nconst Name = styled.h2<{ $textColor: string }>`\n  margin: 0;\n  color: ${props => props.$textColor};\n  font-size: 46px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  width: 100%;\n  text-align: center;\n  padding: 5px 0;\n`;\n\n// 学科标签 - 修改为不遮挡图片并加大字号\nconst Subject = styled.div<{ $textColor: string; $bgColor: string }>`\n  color: ${props => props.$textColor};\n  padding: 10px 25px;\n  display: block;\n  margin: 0 auto;\n  font-size: 32px;\n  font-weight: bold;\n  text-align: center;\n  width: fit-content;\n`;\n\n// 科目容器\nconst SubjectContainer = styled.div<{ $bgColor: string }>`\n  padding: 20px 10px 10px 10px;\n  background-color: ${props => props.$bgColor};\n  width: 100%;\n`;\n\n// 占位符加载动画\nconst ShimmerAnimation = keyframes`\n  0% {\n    background-position: -468px 0;\n  }\n  100% {\n    background-position: 468px 0;\n  }\n`;\n\nconst ImagePlaceholder = styled.div`\n  width: 100%;\n  height: 350px;\n  background: linear-gradient(to right, #f6f7f8 8%, #edeef1 18%, #f6f7f8 33%);\n  background-size: 800px 104px;\n  animation: ${ShimmerAnimation} 1.5s infinite linear forwards;\n`;\n\n// 关闭按钮\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  z-index: 10;\n  \n  &:hover {\n    background: rgba(0, 0, 0, 0.8);\n  }\n`;\n\n// 崇拜按钮\nconst WorshipButton = styled.button`\n  background: #f39c12;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 10px 20px;\n  margin: 10px auto;\n  display: block;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: all 0.3s;\n  \n  &:hover {\n    background: #e67e22;\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  }\n`;\n\n// 更鲜艳的背景颜色数组\nconst backgroundColors = [\n  '#4A90E2', // 亮蓝\n  '#50E3C2', // 青绿\n  '#F5A623', // 橙黄\n  '#D0021B', // 红色\n  '#9013FE', // 紫色\n  '#417505', // 绿色\n  '#8B572A', // 棕色\n  '#000000', // 黑色\n];\n\n// 获取颜色的反色函数\nconst getInverseColor = (hexColor: string): string => {\n  // 移除#前缀\n  const hex = hexColor.replace('#', '');\n  \n  // 将颜色转换为RGB\n  const r = parseInt(hex.slice(0, 2), 16);\n  const g = parseInt(hex.slice(2, 4), 16);\n  const b = parseInt(hex.slice(4, 6), 16);\n  \n  // 计算反色\n  const inverseR = 255 - r;\n  const inverseG = 255 - g;\n  const inverseB = 255 - b;\n  \n  // 转回十六进制格式\n  return `#${inverseR.toString(16).padStart(2, '0')}${inverseG.toString(16).padStart(2, '0')}${inverseB.toString(16).padStart(2, '0')}`;\n};\n\n// 科学家卡片组件\ninterface ScientistCardProps {\n  scientist: Scientist;\n  onClose: () => void;\n  onWorshipComplete?: () => void;\n}\n\nconst ScientistCard: React.FC<ScientistCardProps> = ({ scientist, onClose, onWorshipComplete }) => {\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\n  const [imageSrc, setImageSrc] = useState(scientist.image || '');\n  \n  // 为依赖数组提取唯一标识符\n  const scientistIdentifier = scientist._id || scientist.name;\n  \n  // 生成背景颜色和文字颜色\n  const { bgColor, textColor } = useMemo(() => {\n    // 使用科学家标识符的字符串生成一个数字哈希\n    let hash = 0;\n    for (let i = 0; i < scientistIdentifier.length; i++) {\n      hash = scientistIdentifier.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    // 使用哈希值确定背景颜色的索引\n    const index = Math.abs(hash % backgroundColors.length);\n    const bgColor = backgroundColors[index];\n    // 生成文字颜色（背景的反色）\n    const textColor = getInverseColor(bgColor);\n    \n    return { bgColor, textColor };\n  }, [scientistIdentifier]);\n  \n  // 检查图片是否加载成功\n  useEffect(() => {\n    if (!scientist.image) {\n      setIsImageLoaded(true);\n      return;\n    }\n    \n    const img = new Image();\n    img.onload = () => {\n      setIsImageLoaded(true);\n    };\n    img.onerror = () => {\n      // 当主图片加载失败时，尝试使用备用图片\n      console.log('使用备用图片:', scientist.fallbackImage);\n      setImageSrc(scientist.fallbackImage || '');\n      \n      // 检查备用图片是否能加载\n      const fallbackImg = new Image();\n      fallbackImg.onload = () => {\n        setIsImageLoaded(true);\n      };\n      fallbackImg.onerror = () => {\n        // 即使备用图片失败也设置为已加载，显示空图片区域总比无限加载好\n        setIsImageLoaded(true);\n      };\n      fallbackImg.src = scientist.fallbackImage || '';\n    };\n    img.src = scientist.image;\n  }, [scientist.image, scientist.fallbackImage]);\n\n  return (\n    <CardContainer $isVisible={true} $bgColor={bgColor}>\n      <CloseButton onClick={onClose}>×</CloseButton>\n      <SubjectContainer $bgColor={bgColor}>\n        <Subject $textColor={textColor} $bgColor={`${bgColor}`}>\n          <SmartText text=\"学科：\" />\n          <SmartText text={scientist.subject || \"未知学科\"} />\n        </Subject>\n      </SubjectContainer>\n      {isImageLoaded ? (\n        <ScientistImage $image={imageSrc} />\n      ) : (\n        <ImagePlaceholder />\n      )}\n      <CardContent $bgColor={bgColor}>\n        <Name $textColor={textColor}>\n          {scientist.name}\n        </Name>\n        <WorshipButton onClick={onWorshipComplete}>\n          <SmartText text=\"崇拜这位科学家\" />\n        </WorshipButton>\n      </CardContent>\n    </CardContainer>\n  );\n};\n\nexport default ScientistCard; "],"names":["rainbowBorder","keyframes","CardContainer","styled","div","props","$bgColor","$isVisible","fadeIn","ScientistImage","$image","CardContent","Name","h2","$textColor","Subject","SubjectContainer","ShimmerAnimation","ImagePlaceholder","CloseButton","button","WorshipButton","backgroundColors","_ref","scientist","onClose","onWorshipComplete","isImageLoaded","setIsImageLoaded","useState","imageSrc","setImageSrc","image","scientistIdentifier","_id","name","bgColor","textColor","useMemo","hash","i","length","charCodeAt","index","Math","abs","hexColor","hex","replace","r","parseInt","slice","inverseG","inverseB","toString","padStart","getInverseColor","useEffect","img","Image","onload","onerror","console","log","fallbackImage","fallbackImg","src","_jsxs","children","_jsx","onClick","SmartText","text","subject"],"sourceRoot":""}