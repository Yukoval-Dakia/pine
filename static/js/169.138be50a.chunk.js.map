{"version":3,"file":"static/js/169.138be50a.chunk.js","mappings":"uNAaA,MAAMA,EAAqBC,EAAAA,GAAOC,GAA4B;;;;;;;;;;;;aAYjDC,GAASA,EAAMC,WAAa,EAAI;;eAE9BD,GAASA,EAAMC,WAAaC,EAAwBC;;EAK7DC,EAAiBN,EAAAA,GAAOC,GAAuB;;;0BAG3BC,GAASA,EAAMK,OAAS;;;;;;;EAU5CC,EAAaR,EAAAA,GAAOC,GAAsB;;;;;;;;;EAY1CQ,EAAgBT,EAAAA,GAAOU,EAAE;;;;;;;EAUzBN,EAAwBO,EAAAA,EAAS;;;;;;;;;EAYjCN,EAAwBM,EAAAA,EAAS;;;;;;;;;EAWjCC,EAA8EC,IAAuC,IAAtC,UAAEC,EAAS,UAAEC,GAAY,GAAOF,EACnH,MAAOG,EAAUC,IAAeC,EAAAA,EAAAA,UAASH,GACnCI,GAAWC,EAAAA,EAAAA,QAAuB,MA4BxC,OA1BAC,EAAAA,EAAAA,YAAU,KACR,GAAIN,IAAcD,EAAUP,MAE1B,YADAU,GAAY,GAId,MAAMK,EAAW,IAAIC,sBAClBC,IACCA,EAAQC,SAAQC,IACd,GAAIA,EAAMC,gBAAkBb,EAAUP,MAAO,CAC3C,MAAMqB,EAAM,IAAIC,MAChBD,EAAIE,IAAMhB,EAAUP,MACpBqB,EAAIG,OAAS,IAAMd,GAAY,EACjC,IACA,GAEJ,CAAEe,UAAW,KAOf,OAJIb,EAASc,SACXX,EAASY,QAAQf,EAASc,SAGrB,IAAMX,EAASa,YAAY,GACjC,CAACrB,EAAUP,MAAOQ,KAGnBqB,EAAAA,EAAAA,KAAC9B,EAAc,CACb+B,IAAKlB,EACLZ,MAAOS,GAAYF,EAAUP,MAAQO,EAAUP,MAASO,EAAUwB,WAAa,gCAC/EC,MAAO,CACLC,WAAY,qBACZC,WAAY,+BAEd,EAsBN,EAlBoDC,IAAkD,IAAjD,UAAE5B,EAAS,UAAE6B,EAAS,UAAE5B,GAAY,GAAO2B,EAC9F,MAAM,SAAEE,IAAaC,EAAAA,EAAAA,KACfC,GAAIC,EAAAA,EAAAA,GAAeH,GAEzB,OACEI,EAAAA,EAAAA,MAACjD,EAAkB,CACjBI,WAAYwC,EACZJ,MAAO,CAAEC,WAAY,sBAAuBS,SAAA,EAE5Cb,EAAAA,EAAAA,KAACxB,EAAkB,CAACE,UAAWA,EAAWC,UAAWA,KACrDiC,EAAAA,EAAAA,MAACxC,EAAU,CAAC0C,MAAOpC,EAAUoC,OAAS,UAAUD,SAAA,CAC7CH,EAAEhC,UAAUqC,cAAerC,EAAUsC,SAAW,qCAEnDhB,EAAAA,EAAAA,KAAC3B,EAAa,CAAAwC,SAAEnC,EAAUuC,SACP,C","sources":["components/ScientistCard.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { Scientist } from '../types/scientist';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport { getTranslation } from '../translations';\n\ninterface ScientistCardProps {\n  scientist: Scientist;\n  isVisible: boolean;\n  preloaded?: boolean;\n}\n\n// 修改科学家容器样式\nconst ScientistContainer = styled.div<{ $isVisible: boolean }>`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  z-index: 1002;\n  text-align: center;\n  color: white;\n  width: 400px;\n  border: 5px solid gold;\n  border-radius: 20px;\n  overflow: hidden;\n  background-color: #1a1a1a;\n  opacity: ${props => props.$isVisible ? 1 : 0};\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);\n  animation: ${props => props.$isVisible ? buttonToCardAnimation : cardToButtonAnimation} 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;\n  will-change: transform;\n`;\n\n// 科学家照片\nconst ScientistImage = styled.div<{ image?: string }>`\n  width: 100%;\n  height: 400px;\n  background-image: url(${props => props.image || '/images/default-scientist.jpg'});\n  background-size: cover;\n  background-position: center;\n  margin: 0;\n  position: relative;\n  border-bottom: 5px solid gold;\n  transition: background-image 0.3s ease;\n`;\n\n// 科目信息栏\nconst SubjectBar = styled.div<{ color: string }>`\n  width: 100%;\n  padding: 20px;\n  background-color: #3498db;\n  color: white;\n  text-align: center;\n  font-size: 24px;\n  font-weight: bold;\n  text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n`;\n\n// 科学家名称\nconst ScientistName = styled.h2`\n  margin: 0;\n  padding: 20px;\n  font-size: 28px;\n  color: white;\n  text-shadow: 0 0 10px rgba(255, 215, 0, 0.7);\n  background-color: #1a1a1a;\n`;\n\n// 按钮到卡片的变形动画\nconst buttonToCardAnimation = keyframes`\n  0% {\n    transform: translate(-50%, 100vh) scale(0.5);\n    opacity: 0;\n  }\n  100% {\n    transform: translate(-50%, -50%) scale(1);\n    opacity: 1;\n  }\n`;\n\n// 卡片到按钮的变形动画\nconst cardToButtonAnimation = keyframes`\n  0% {\n    transform: translate(-50%, -50%) scale(1);\n    opacity: 1;\n  }\n  100% {\n    transform: translate(-50%, 100vh) scale(0.5);\n    opacity: 0;\n  }\n`;\n\nconst LazyScientistImage: React.FC<{ scientist: Scientist; preloaded?: boolean }> = ({ scientist, preloaded = false }) => {\n  const [isLoaded, setIsLoaded] = useState(preloaded);\n  const imageRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (preloaded || !scientist.image) {\n      setIsLoaded(true);\n      return;\n    }\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting && scientist.image) {\n            const img = new Image();\n            img.src = scientist.image;\n            img.onload = () => setIsLoaded(true);\n          }\n        });\n      },\n      { threshold: 0.1 }\n    );\n\n    if (imageRef.current) {\n      observer.observe(imageRef.current);\n    }\n\n    return () => observer.disconnect();\n  }, [scientist.image, preloaded]);\n\n  return (\n    <ScientistImage\n      ref={imageRef}\n      image={isLoaded && scientist.image ? scientist.image : (scientist.thumbnail || '/images/default-scientist.jpg')}\n      style={{\n        willChange: 'transform, opacity',\n        transition: 'background-image 0.3s ease'\n      }}\n    />\n  );\n};\n\nconst ScientistCard: React.FC<ScientistCardProps> = ({ scientist, isVisible, preloaded = false }) => {\n  const { language } = useLanguage();\n  const t = getTranslation(language);\n\n  return (\n    <ScientistContainer \n      $isVisible={isVisible}\n      style={{ willChange: 'transform, opacity' }}\n    >\n      <LazyScientistImage scientist={scientist} preloaded={preloaded} />\n      <SubjectBar color={scientist.color || '#3498db'}>\n        {t.scientist.subjectPrefix}{scientist.subject || '未设置学科'}\n      </SubjectBar>\n      <ScientistName>{scientist.name}</ScientistName>\n    </ScientistContainer>\n  );\n};\n\nexport default ScientistCard; "],"names":["ScientistContainer","styled","div","props","$isVisible","buttonToCardAnimation","cardToButtonAnimation","ScientistImage","image","SubjectBar","ScientistName","h2","keyframes","LazyScientistImage","_ref","scientist","preloaded","isLoaded","setIsLoaded","useState","imageRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","img","Image","src","onload","threshold","current","observe","disconnect","_jsx","ref","thumbnail","style","willChange","transition","_ref2","isVisible","language","useLanguage","t","getTranslation","_jsxs","children","color","subjectPrefix","subject","name"],"sourceRoot":""}