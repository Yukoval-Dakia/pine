{"version":3,"file":"static/js/169.a9c0050f.chunk.js","mappings":"uNAOA,MAAMA,EAAgBC,EAAAA,GAAOC,GAA4B;;;;;;;;;aAS5CC,GAASA,EAAMC,WAAa,EAAI;eAC9BD,GAASA,EAAMC,WAAa,WAAa;;EAIlDC,EAASC,EAAAA,EAAS;;;EAMlBC,EAAiBN,EAAAA,GAAOC,GAAuB;;;0BAG3BC,GAASA,EAAMK;;;;;;eAM1BH;EAITI,EAAcR,EAAAA,GAAOC,GAAG;;EAKxBQ,EAAOT,EAAAA,GAAOU,EAAsB;;WAE/BR,GAASA,EAAMS;;;;;;;;;;;;;wBAaFT,GAASA,EAAMS;;EAKjCC,EAAUZ,EAAAA,GAAOC,GAAuB;sBACxBC,GAASA,EAAMS;WAC1BT,GAASA,EAAMS;;;;;;;EAUpBE,EAAcb,EAAAA,GAAOc,CAAC;;;;EAOtBC,EAAmBV,EAAAA,EAAS;;;;;;;EAS5BW,EAAmBhB,EAAAA,GAAOC,GAAG;;;;;eAKpBc;;EAqEf,EA1DoDE,IAAkD,IAAjD,UAAEC,EAAS,UAAEC,EAAS,UAAEC,GAAY,GAAOH,EAC9F,MAAM,SAAEI,IAAaC,EAAAA,EAAAA,KACfC,GAAIC,EAAAA,EAAAA,GAAeH,IAClBI,EAAeC,IAAoBC,EAAAA,EAAAA,UAASP,IAC5CQ,EAAUC,IAAeF,EAAAA,EAAAA,UAAST,EAAUY,OAAS,IAgC5D,OA7BAC,EAAAA,EAAAA,YAAU,KACR,IAAKb,EAAUY,OAASV,EAEtB,YADAM,GAAiB,GAInB,MAAMM,EAAM,IAAIC,MAChBD,EAAIE,OAAS,KACXR,GAAiB,EAAK,EAExBM,EAAIG,QAAU,KAEZC,QAAQC,IAAI,wCAAWnB,EAAUoB,eACjCT,EAAYX,EAAUoB,eAAiB,IAGvC,MAAMC,EAAc,IAAIN,MACxBM,EAAYL,OAAS,KACnBR,GAAiB,EAAK,EAExBa,EAAYJ,QAAU,KAEpBT,GAAiB,EAAK,EAExBa,EAAYC,IAAMtB,EAAUoB,eAAiB,EAAE,EAEjDN,EAAIQ,IAAMtB,EAAUY,KAAK,GACxB,CAACZ,EAAUY,MAAOZ,EAAUoB,cAAelB,KAG5CqB,EAAAA,EAAAA,MAAC1C,EAAa,CAACI,WAAYgB,EAAUuB,SAAA,CAClCjB,GACCkB,EAAAA,EAAAA,KAACrC,EAAc,CAACC,OAAQqB,KAExBe,EAAAA,EAAAA,KAAC3B,EAAgB,KAEnByB,EAAAA,EAAAA,MAACjC,EAAW,CAAAkC,SAAA,EACVC,EAAAA,EAAAA,KAAClC,EAAI,CAACE,OAAQO,EAAU0B,OAAS,UAAUF,SACxCxB,EAAU2B,QAEbJ,EAAAA,EAAAA,MAAC7B,EAAO,CAACD,OAAQO,EAAU0B,OAAS,UAAUF,SAAA,CAC3CnB,EAAEL,UAAU4B,cAAc,IAAE5B,EAAU6B,SAAW,+BAEpDJ,EAAAA,EAAAA,KAAC9B,EAAW,CAAA6B,SACTxB,EAAU8B,aAAe,kCAGhB,C","sources":["components/ScientistCard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { Scientist } from '../types/scientist';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport { getTranslation } from '../translations';\n\n// 卡片容器样式\nconst CardContainer = styled.div<{ $isVisible: boolean }>`\n  background-color: white;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);\n  width: 80%;\n  max-width: 500px;\n  position: relative;\n  z-index: 1002;\n  opacity: ${props => props.$isVisible ? 1 : 0};\n  transform: ${props => props.$isVisible ? 'scale(1)' : 'scale(0.9)'};\n  transition: opacity 0.3s ease, transform 0.3s ease;\n`;\n\nconst fadeIn = keyframes`\n  0% { opacity: 0; }\n  100% { opacity: 1; }\n`;\n\n// 科学家照片\nconst ScientistImage = styled.div<{ $image: string }>`\n  width: 100%;\n  height: 350px;\n  background-image: url(${props => props.$image});\n  background-size: cover;\n  background-position: center;\n  margin: 0;\n  position: relative;\n  border-bottom: 5px solid gold;\n  animation: ${fadeIn} 0.5s ease-in-out;\n`;\n\n// 卡片内容\nconst CardContent = styled.div`\n  padding: 20px;\n`;\n\n// 姓名标题\nconst Name = styled.h2<{ $color: string }>`\n  margin: 0 0 10px 0;\n  color: ${props => props.$color};\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  position: relative;\n  \n  &:after {\n    content: '';\n    position: absolute;\n    bottom: -5px;\n    left: 0;\n    width: 50px;\n    height: 3px;\n    background-color: ${props => props.$color};\n  }\n`;\n\n// 学科标签\nconst Subject = styled.div<{ $color: string }>`\n  background-color: ${props => props.$color}22;\n  color: ${props => props.$color};\n  padding: 4px 10px;\n  border-radius: 15px;\n  display: inline-block;\n  margin: 10px 0;\n  font-size: 14px;\n  font-weight: bold;\n`;\n\n// 描述\nconst Description = styled.p`\n  margin: 15px 0;\n  line-height: 1.6;\n  color: #333;\n`;\n\n// 占位符加载动画\nconst ShimmerAnimation = keyframes`\n  0% {\n    background-position: -468px 0;\n  }\n  100% {\n    background-position: 468px 0;\n  }\n`;\n\nconst ImagePlaceholder = styled.div`\n  width: 100%;\n  height: 350px;\n  background: linear-gradient(to right, #f6f7f8 8%, #edeef1 18%, #f6f7f8 33%);\n  background-size: 800px 104px;\n  animation: ${ShimmerAnimation} 1.5s infinite linear forwards;\n  border-bottom: 5px solid #edeef1;\n`;\n\n// 科学家卡片组件\ninterface ScientistCardProps {\n  scientist: Scientist;\n  isVisible: boolean;\n  preloaded?: boolean;\n}\n\nconst ScientistCard: React.FC<ScientistCardProps> = ({ scientist, isVisible, preloaded = false }) => {\n  const { language } = useLanguage();\n  const t = getTranslation(language);\n  const [isImageLoaded, setIsImageLoaded] = useState(preloaded);\n  const [imageSrc, setImageSrc] = useState(scientist.image || '');\n  \n  // 检查图片是否加载成功\n  useEffect(() => {\n    if (!scientist.image || preloaded) {\n      setIsImageLoaded(true);\n      return;\n    }\n    \n    const img = new Image();\n    img.onload = () => {\n      setIsImageLoaded(true);\n    };\n    img.onerror = () => {\n      // 当主图片加载失败时，尝试使用备用图片\n      console.log('使用备用图片:', scientist.fallbackImage);\n      setImageSrc(scientist.fallbackImage || '');\n      \n      // 检查备用图片是否能加载\n      const fallbackImg = new Image();\n      fallbackImg.onload = () => {\n        setIsImageLoaded(true);\n      };\n      fallbackImg.onerror = () => {\n        // 即使备用图片失败也设置为已加载，显示空图片区域总比无限加载好\n        setIsImageLoaded(true);\n      };\n      fallbackImg.src = scientist.fallbackImage || '';\n    };\n    img.src = scientist.image;\n  }, [scientist.image, scientist.fallbackImage, preloaded]);\n\n  return (\n    <CardContainer $isVisible={isVisible}>\n      {isImageLoaded ? (\n        <ScientistImage $image={imageSrc} />\n      ) : (\n        <ImagePlaceholder />\n      )}\n      <CardContent>\n        <Name $color={scientist.color || '#3498db'}>\n          {scientist.name}\n        </Name>\n        <Subject $color={scientist.color || '#3498db'}>\n          {t.scientist.subjectPrefix} {scientist.subject || '未知学科'}\n        </Subject>\n        <Description>\n          {scientist.description || '暂无描述'}\n        </Description>\n      </CardContent>\n    </CardContainer>\n  );\n};\n\nexport default ScientistCard;"],"names":["CardContainer","styled","div","props","$isVisible","fadeIn","keyframes","ScientistImage","$image","CardContent","Name","h2","$color","Subject","Description","p","ShimmerAnimation","ImagePlaceholder","_ref","scientist","isVisible","preloaded","language","useLanguage","t","getTranslation","isImageLoaded","setIsImageLoaded","useState","imageSrc","setImageSrc","image","useEffect","img","Image","onload","onerror","console","log","fallbackImage","fallbackImg","src","_jsxs","children","_jsx","color","name","subjectPrefix","subject","description"],"sourceRoot":""}